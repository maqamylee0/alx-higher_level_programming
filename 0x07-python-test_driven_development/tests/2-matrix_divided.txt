>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_a = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix_a, 1)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
>>> matrix_divided(matrix_a, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 16, in matrix_divided
ZeroDivisionError: division by zero
>>> matrix_divided(matrix_a, 1.0)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
>>> matrix_divided(matrix_a, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix = [1, 2, 3]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 4, in matrix_divided
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, "l", 3], [5, 6, 7]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 12, in matrix_divided
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3], [5, 6, 7, 8]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 8, in matrix_divided
TypeError: Each row of the matrix must have the same size
>>> matrix = [[1, 2, 3], [5, 6, 7]]
>>> matrix_divided(matrix, "l")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 14, in matrix_divided
TypeError: div must be a number
